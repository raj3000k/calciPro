[{"/Users/rajmotwani/Documents/VikretaDotCom/ProjectReact/calci/src/index.js":"1","/Users/rajmotwani/Documents/VikretaDotCom/ProjectReact/calci/src/App.js":"2","/Users/rajmotwani/Documents/VikretaDotCom/ProjectReact/calci/src/DigitButton.js":"3","/Users/rajmotwani/Documents/VikretaDotCom/ProjectReact/calci/src/OperationButton.js":"4","/Users/rajmotwani/Desktop/GSSOC23/calciPro/src/index.js":"5","/Users/rajmotwani/Desktop/GSSOC23/calciPro/src/App.js":"6","/Users/rajmotwani/Desktop/GSSOC23/calciPro/src/OperationButton.js":"7","/Users/rajmotwani/Desktop/GSSOC23/calciPro/src/DigitButton.js":"8"},{"size":467,"mtime":1686661800025,"results":"9","hashOfConfig":"10"},{"size":2085,"mtime":1686681463972,"results":"11","hashOfConfig":"10"},{"size":260,"mtime":1686681083224,"results":"12","hashOfConfig":"10"},{"size":275,"mtime":1686681116647,"results":"13","hashOfConfig":"10"},{"size":467,"mtime":1686661800025,"results":"14","hashOfConfig":"15"},{"size":4854,"mtime":1686839406274,"results":"16","hashOfConfig":"15"},{"size":275,"mtime":1686681116647,"results":"17","hashOfConfig":"15"},{"size":260,"mtime":1686681083224,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"viglcp",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"peexq1",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rajmotwani/Documents/VikretaDotCom/ProjectReact/calci/src/index.js",[],[],[],"/Users/rajmotwani/Documents/VikretaDotCom/ProjectReact/calci/src/App.js",["45"],[],"/Users/rajmotwani/Documents/VikretaDotCom/ProjectReact/calci/src/DigitButton.js",[],[],"/Users/rajmotwani/Documents/VikretaDotCom/ProjectReact/calci/src/OperationButton.js",[],[],"/Users/rajmotwani/Desktop/GSSOC23/calciPro/src/index.js",[],[],"/Users/rajmotwani/Desktop/GSSOC23/calciPro/src/App.js",["46","47"],[],"import { useReducer } from \"react\";\nimport \"./styles.css\";\nimport DigitButton from \"./DigitButton\";\nimport OperationButton from \"./OperationButton\";\n\nexport const ACTIONS = {\n  ADD_DIGIT: \"add-digit\",\n  CHOOSE_OPERATION: \"choose-operation\",\n  CLEAR: \"clear\",\n  DELETE_DIGIT: \"delete-digit\",\n  EVALUATE: \"evaluate\",\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          currentOperand: payload.digit,\n          overwrite: false,\n        }\n      }\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") {\n        return state\n      }\n      if (payload.digit === \".\" && state.currentOperand.includes(\".\")) {\n        return state\n      }\n\n      return {\n        ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`,\n      }\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand == null && state.previousOperand == null) {\n        return state\n      }\n\n      if (state.currentOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation,\n        }\n      }\n\n      if (state.previousOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null,\n        }\n      }\n\n      return {\n        ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null,\n      }\n    case ACTIONS.CLEAR:\n      return {}\n    case ACTIONS.DELETE_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          overwrite: false,\n          currentOperand: null,\n        }\n      }\n      if (state.currentOperand == null) return state\n      if (state.currentOperand.length === 1) {\n        return { ...state, currentOperand: null }\n      }\n\n      return {\n        ...state,\n        currentOperand: state.currentOperand.slice(0, -1),\n      }\n    case ACTIONS.EVALUATE:\n      if (\n        state.operation == null ||\n        state.currentOperand == null ||\n        state.previousOperand == null\n      ) {\n        return state\n      }\n\n      return {\n        ...state,\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state),\n      }\n  }\n}\n\nfunction evaluate({ currentOperand, previousOperand, operation }) {\n  const prev = parseFloat(previousOperand)\n  const current = parseFloat(currentOperand)\n  if (isNaN(prev) || isNaN(current)) return \"\"\n  let computation = \"\"\n  switch (operation) {\n    case \"+\":\n      computation = prev + current\n      break\n    case \"-\":\n      computation = prev - current\n      break\n    case \"*\":\n      computation = prev * current\n      break\n    case \"รท\":\n      computation = prev / current\n      break\n  }\n\n  return computation.toString()\n}\n\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\n  maximumFractionDigits: 0,\n})\nfunction formatOperand(operand) {\n  if (operand == null) return\n  const [integer, decimal] = operand.split(\".\")\n  if (decimal == null) return INTEGER_FORMATTER.format(integer)\n  return `${INTEGER_FORMATTER.format(integer)}.${decimal}`\n}\n\nfunction App() {\n  const [{ currentOperand, previousOperand, operation }, dispatch] = useReducer(\n    reducer,\n    {}\n  )\n\n  return (\n    <div className=\"calculator-grid\">\n      <div className=\"output\">\n        <div className=\"previous-operand\">\n          {formatOperand(previousOperand)} {operation}\n        </div>\n        <div className=\"current-operand\">{formatOperand(currentOperand)}</div>\n      </div>\n      <button\n        className=\"span-two\"\n        onClick={() => dispatch({ type: ACTIONS.CLEAR })}\n      >\n        AC\n      </button>\n      <button onClick={() => dispatch({ type: ACTIONS.DELETE_DIGIT })}>\n        DEL\n      </button>\n      <OperationButton operation=\"รท\" dispatch={dispatch} />\n      <DigitButton digit=\"1\" dispatch={dispatch} />\n      <DigitButton digit=\"2\" dispatch={dispatch} />\n      <DigitButton digit=\"3\" dispatch={dispatch} />\n      <OperationButton operation=\"*\" dispatch={dispatch} />\n      <DigitButton digit=\"4\" dispatch={dispatch} />\n      <DigitButton digit=\"5\" dispatch={dispatch} />\n      <DigitButton digit=\"6\" dispatch={dispatch} />\n      <OperationButton operation=\"+\" dispatch={dispatch} />\n      <DigitButton digit=\"7\" dispatch={dispatch} />\n      <DigitButton digit=\"8\" dispatch={dispatch} />\n      <DigitButton digit=\"9\" dispatch={dispatch} />\n      <OperationButton operation=\"-\" dispatch={dispatch} />\n      <DigitButton digit=\".\" dispatch={dispatch} />\n      <DigitButton digit=\"0\" dispatch={dispatch} />\n      <button\n        className=\"span-two\"\n        onClick={() => dispatch({ type: ACTIONS.EVALUATE })}\n      >\n        =\n      </button>\n    </div>\n  )\n}\n\nexport default App;\n","/Users/rajmotwani/Desktop/GSSOC23/calciPro/src/OperationButton.js",[],[],"/Users/rajmotwani/Desktop/GSSOC23/calciPro/src/DigitButton.js",[],[],{"ruleId":"48","severity":1,"message":"49","line":15,"column":3,"nodeType":"50","messageId":"51","endLine":27,"endColumn":4},{"ruleId":"48","severity":1,"message":"49","line":15,"column":3,"nodeType":"50","messageId":"51","endLine":97,"endColumn":4},{"ruleId":"48","severity":1,"message":"49","line":105,"column":3,"nodeType":"50","messageId":"51","endLine":118,"endColumn":4},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase"]